name: PxApi SonarScan

run-name: ${{ github.event_name == 'pull_request' &&
  format('PxApi SonarScan for PR {0}', github.event.pull_request.number) || 
  format('PxApi SonarScan for {0}', github.event.head_commit.message) }}

on:
  pull_request:
    branches:
      - 'dev'

jobs:
  sonar:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet-version: ['9.x']
        configuration: [ 'Debug' ]
        if: ${{ github.actor != 'dependabot[bot]' }}
        
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: '9.x'

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
            distribution: 'zulu'
            java-version: '21'

      - name: Install dotnet-coverage
        run: dotnet tool install -g dotnet-coverage
      
      - name: Install SonarCloud scanner
        run: dotnet tool install -g dotnet-sonarscanner

      - name: Begin SonarScanner
        run: dotnet sonarscanner begin /k:StatisticsFinland_PxApi
            /o:statisticsfinland-github
            /d:sonar.host.url=https://sonarcloud.io
            /d:sonar.token=${{ secrets.SONAR_TOKEN }}    
            /d:sonar.cs.vscoveragexml.reportsPaths=**/coverage.xml
            /d:sonar.scanner.scanAll=false

      - name: Build backend
        run: dotnet build --configuration ${{ matrix.configuration }} /p:TargetFramework=net9.0

      - name: Run coverage test
        run: dotnet-coverage collect "dotnet test --configuration ${{ matrix.configuration }} --logger trx /p:TargetFramework=net9.0" -f xml -o coverage.xml
        
      - name: End SonarScanner
        run: dotnet sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}
        